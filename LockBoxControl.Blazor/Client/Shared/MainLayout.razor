@using LockBoxControl.Blazor.Client.Contracts;
@using LockBoxControl.Blazor.Client.Services;
@inherits LayoutComponentBase

@inject IThemeService ThemeService

<MudThemeProvider @bind-IsDarkMode="@IsDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Link="https://mudblazor.com/" Target="_blank" />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/Bouwmeester-Lab/Lockbox-Code" Target="_blank" />
        <ThemeSelector @bind-IsDarkMode=@IsDarkMode />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">LockBoxControl.Blazor</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    bool IsDarkMode { get; set; } = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var theme = await ThemeService.GetCurrentThemeAsync();
            IsDarkMode = theme switch
            {
                Theme.Dark => true,
                _ => false,
            };
            StateHasChanged();
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}