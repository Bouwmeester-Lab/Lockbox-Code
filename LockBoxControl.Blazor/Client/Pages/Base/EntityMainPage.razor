@using LockBoxControl.Core.Contracts;

@typeparam T where T : IEntity<TId>
@typeparam TId where TId : IEquatable<TId>

@inherits EditEntity<T, TId>
@*@if (IsLoading)
{
    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" Height="500px" />
}
else
{*@

    <MudDataGrid T=T
                 
                 @ref=DataGrid
                 Loading=IsLoading
                 Items=Items
                 EditMode="DataGridEditMode.Form"
                 ReadOnly=@IsReadOnly
                 CommittedItemChanges=@CommitChangesAsync
                 EditTrigger="DataGridEditTrigger.OnRowClick">
        <ToolBarContent>
        @if(AddTemplate is not null)
        {
            <MudIconButton Icon="@Icons.Material.Outlined.Add" @onclick="(() => isAddDialogOpen = true)" />
        }
        
            <MudIconButton Icon="@Icons.Material.Outlined.Delete" Color="Color.Inherit" @onclick=DeleteAsync />
            <MudIconButton Icon="@Icons.Material.Outlined.Refresh" Color="Color.Inherit" @onclick="@(async () => await LoadItemsAsync(PageNumber, PageSize))" />
        </ToolBarContent>
        <Columns>
            <SelectColumn T="T" />
            @OtherColumns
        @if (!IsReadOnly)
        {
            <TemplateColumn CellClass="d-flex justify-end">
                <CellTemplate>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@context.Actions.StartEditingItemAsync" />
                </CellTemplate>
            </TemplateColumn>
        }
        </Columns>

        <PagerContent>
        <Pager @bind-CurrentPage=PageNumber 
               TotalElements=TotalElements 
               RowsPerPageChanged=OnRowsPerPageChanged
               OnFirstPageRequested="@(async () => await LoadItemsAsync(1, PageSize))"
               PageChangedRequested="@(async (pageNumber) => await LoadItemsAsync(pageNumber, PageSize))"
               />
        </PagerContent>
    </MudDataGrid>
    <MudDialog @bind-IsVisible=isAddDialogOpen>
        <TitleContent>
        <div class="justify-end d-flex">
            <MudIconButton Icon="@Icons.Material.Filled.Close" @onclick=ClosePopup />
            </div>
        
        </TitleContent>
        <DialogContent>
            <MudCard Elevation="0" Style="min-width: 400px">
                <MudCardContent>
                @if (Entity is not null && AddTemplate is not null)
                {
                    <CascadingValue IsFixed=true Value="this">
                        @AddTemplate(Entity)
                    </CascadingValue>

                }
                else
                {
                    <MudAlert Severity="Severity.Error">@string.Format(Resources.Strings.EntityIsNull, typeof(T).Name)</MudAlert>
                }
            </MudCardContent>
            </MudCard>
            
        </DialogContent>
    </MudDialog>
@*}*@
@*StartedEditingItem=@StartedEditingItem*@
@code {

}

