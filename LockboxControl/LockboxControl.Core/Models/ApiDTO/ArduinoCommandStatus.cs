using LockBoxControl.Core.Models.SerialDTO;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.Json.Serialization;
using System.Threading.Tasks;

namespace LockBoxControl.Core.Models.ApiDTO
{
    public class ArduinoCommandStatus
    {
        [JsonPropertyName("isSuccess")]
        public bool IsSuccess { get; set; }
        [JsonPropertyName("isLongRunning")]
        public bool IsLongRunning { get; set; }
        [JsonPropertyName("status")]
        public string? Status { get; set; }
        [JsonPropertyName("errorMessage")]
        public string? ErrorMessage { get; set; }
        [JsonPropertyName("arduinoId")]
        public long ArduinoId { get; set; }
        /// <summary>
        /// Unique Id that links the request. It's generated by the server and fed to the arduino and returned to the caller for tracking the command. Useful for long running commands.
        /// </summary>
        public Guid RequestId { get; set; }

        public static ArduinoCommandStatus FromSerialCommandStatus(SerialCommandStatus? serialCommandStatus, long arduinoId)
        {
            return new ArduinoCommandStatus
            {
                ArduinoId = arduinoId,
                ErrorMessage = serialCommandStatus?.ErrorMessage,
                IsSuccess = serialCommandStatus?.IsOk ?? false,
                RequestId = serialCommandStatus?.RequestId ?? Guid.Empty,
                IsLongRunning = serialCommandStatus?.IsLongRunning ?? false,

            };
        }
    }
}
